name: CDCI-BD07

on:
  push:
    paths-ignore:
      - "README.md"
    branches: [ "master" ]
  # pull_request:
    # paths-ignore:
      # - "README.md"
    # branches: [ "master" ]

jobs:
  analyze:
    name: Analyze (SEC)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
    - name: Notify MS Teams ERROR in security or code
      if: ${{ failure() }}
      uses: mikesprague/teams-incoming-webhook-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}        
        webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        deploy-card: true
        title: 'Code error!'
        color: 'failure'

    - name: Notify MS Teams SUCCESS in security or code
      if: ${{ success() }}
      uses: mikesprague/teams-incoming-webhook-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}        
        webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        deploy-card: true
        title: 'Code validation successful!'
        color: 'success'     
      
      
  run-lint:
    runs-on: ubuntu-latest
    needs: analyze
    name: Linter
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: "master"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Notify MS Teams ERROR in linter
        if: ${{ failure() }}
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}        
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          deploy-card: true
          title: 'Linting error!'
          color: 'failure'

      - name: Notify MS Teams SUCCESS in linter
        if: ${{ success() }}
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}        
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          deploy-card: true
          title: 'Linting successful!'
          color: 'success'     
      
      
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
          
      - name: Notify MS Teams ERROR in BUILD
        if: ${{ failure() }}
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}        
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          deploy-card: true
          title: 'Building error!'
          color: 'failure'

      - name: Notify MS Teams SUCCESS in BUILD
        if: ${{ success() }}
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}        
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          deploy-card: true
          title: 'Building successful!'
          color: 'success' 
        
        
  deploy:
      runs-on: windows-latest
      needs: build
      environment:
        name: 'Production'
        url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

      steps:
        - name: Download artifact from build job
          uses: actions/download-artifact@v2
          with:
            name: .net-app

        - name: Deploy to Azure Web App
          id: deploy-to-webapp
          uses: azure/webapps-deploy@v2
          with:
            app-name: 'BD07'
            slot-name: 'Production'
            publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D1207A6F749147639B77AE2B16BE2187 }}
            package: .
        - name: Notify MS Teams ERROR in BUILD
          if: ${{ failure() }}
          uses: mikesprague/teams-incoming-webhook-action@v1
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}        
            webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
            deploy-card: true
            title: 'Deployment error!'
            color: 'failure'

        - name: Notify MS Teams SUCCESS in BUILD
          if: ${{ success() }}
          uses: mikesprague/teams-incoming-webhook-action@v1
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}        
            webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
            deploy-card: true
            title: 'Deployment successful!'
            color: 'success' 
        
